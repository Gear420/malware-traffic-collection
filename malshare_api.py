#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2021/7/15 3:38 下午
# @Author  : Gear

import sys
import json
import requests

import argparse
import json
import logging
import os
import sys
from multiprocessing.pool import Pool

import requests
import tqdm


api_key = "0482adbfcd78dc382c54625c763d438e0a118af2eb5dc5153b9c5b55785be817"
type = 'botnet'

def download_file_by_hash(file_hash):
    logging.debug("Downloading {}".format(file_hash))
    try:
        malshare_url = "http://malshare.com/sampleshare.php"
        payload = {'action': 'getfile', 'api_key': api_key, 'hash': file_hash}
        user_agent = {'User-agent': 'wget_malshare daily 1.0'}

        r = requests.get(malshare_url, params = payload, headers = user_agent)
        sample = r.content

        if sample == "Sample not found":
            logging.error("Sample not Found")
            return None
        if sample == "ERROR! => Account not activated":
            logging.error("Bad API Key")
            return None

        with open(os.path.join("files", file_hash), mode = "wb") as fh:
            fh.write(sample)
            logging.info("{} saved to files".format(file_hash))

    except Exception as e:
        logging.error("download_file_by_hash: Problem connecting. Please Try again.")
        logging.exception(sys.exc_info())
        logging.exception(type(e))
        logging.exception(e.args)
        logging.exception(e)
        sys.exit(1)


def download_list(api_k, hash_list):
    global api_key
    if api_k:
        api_key = api_k
    files = json.load(open(hash_list))
    pool = Pool(os.cpu_count())
    for _ in tqdm.tqdm(pool.imap_unordered(download_file_by_hash, files), total = len(files)):
        pass
def search():
	if api_key != "":
		url = "https://malshare.com/api.php?api_key=%s&action=search&query=%s" % (api_key, type)
		r = requests.get(url)
		
		print(json.dumps(r.json(), sort_keys=True, indent=4, separators=(',', ': ')))
		
		search_result = json.dumps(r.json(), sort_keys=True, indent=4, separators=(',', ': '))
		search_result = json.loads(search_result)
		return search_result
	else:
		print("Please set API key")
if __name__ == "__main__":
	search_result = search()
	print(len(search_result[:10]))
	#print(len(result))
	#print(result)
	