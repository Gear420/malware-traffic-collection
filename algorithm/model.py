#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2020/9/14 9:15 PM
# @Author  : Gear42

from torch import nn


# 构建一个多层感知器用来识别流量数据
class MLP(nn.Module):
    def __init__(self, input_size, num_classes, dropout=0.2):
        super(MLP, self).__init__()
        self.input_size = input_size
        self.num_classes = num_classes

        self.encoder = nn.Sequential(
            nn.Linear(input_size, 256),
            nn.ReLU(),
            nn.Dropout(dropout),
            nn.Linear(256, 200),
            nn.ReLU(),
            nn.Dropout(dropout),
            nn.Linear(200, 180),
            nn.ReLU(),
            #nn.Dropout(dropout),
            nn.Linear(180, 150),
            nn.ReLU(),
            # nn.Dropout(dropout),
            nn.Linear(150, 120),
            nn.ReLU(),
            #nn.Dropout(dropout),
            nn.Linear(120, 90),
            nn.ReLU(),
            # nn.Dropout(dropout),
            nn.Linear(90, 60),
            nn.ReLU(),
            #nn.Dropout(dropout)
        )

        self.classifier = nn.Linear(60, num_classes)

    def forward(self, x):
        x = self.encoder(x)
        self.feature_map = x.detach()
        return self.classifier(x)
